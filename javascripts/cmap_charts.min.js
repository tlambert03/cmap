GLOBAL_OPTIONS={interaction:{mode:"index",intersect:false},plugins:{legend:{display:false}},clip:false,};initCharts();async function initCharts(){var charts=document.getElementsByClassName("cmap-chart");if(charts.length==0){return;}
var chartElems={};for(var i=0;i<charts.length;i++){var cmap_name=charts[i].getAttribute("data-cmap-name");if(cmap_name in chartElems){chartElems[cmap_name].push(charts[i]);}else{chartElems[cmap_name]=[charts[i]];}}
for(var cmap_name in chartElems){var cmap_data=window.cmap_data[cmap_name];for(var i=0;i<chartElems[cmap_name].length;i++){var canv=chartElems[cmap_name][i];if(canv.classList.contains("rgb-chart")){makeRGBChart(canv,cmap_data);}else if(canv.classList.contains("hsl-chart")){makeHSLChart(canv,cmap_data);}else if(canv.classList.contains("linearity-chart")){makeLinearityChart(canv,cmap_data);}}}}
async function makeLinearityChart(canvas,data){var lightness_data=[];var deltas=[];var a=[];var b=[];for(i=0;i<data.x.length;i++){lightness_data.push({x:data.x[i],y:data.J[i]});deltas.push({x:data.x[i],y:data.lightness_derivs[i]});}
new Chart(canvas,{type:"scatter",data:{datasets:[{label:"J",backgroundColor:data.color,data:lightness_data,pointRadius:12,borderWidth:0,},{label:"deltas",data:deltas,showLine:true,radius:0,borderColor:"#AAAAAA66",borderWidth:3,yAxisID:"y2",},],},options:{...GLOBAL_OPTIONS,scales:{y:{max:100,min:0,title:{text:"Lightness L*",display:true}},y2:{max:500,min:-500,title:{text:"Perceptual Lightness Deltas",display:true},position:"right",},},},});}
async function makeRGBChart(canvas,data){var rdata=[];var gdata=[];var bdata=[];for(i=0;i<data.x.length;i++){rdata.push({x:data.x[i],y:data.R[i]});gdata.push({x:data.x[i],y:data.G[i]});bdata.push({x:data.x[i],y:data.B[i]});}
new Chart(canvas,{type:"scatter",data:{datasets:[{label:"red",showLine:true,borderColor:"#BB0000BB",data:rdata},{label:"green",showLine:true,borderColor:"#00CC00BB",data:gdata,},{label:"blue",showLine:true,borderColor:"#0000FFBB",data:bdata,},],},options:{...GLOBAL_OPTIONS,scales:{y:{max:1,min:0,title:{text:"Component Value",display:true},},},elements:{line:{borderWidth:4},point:{radius:0},},},});}
async function makeHSLChart(canvas,data){const datasets=[];var label_data,_data,val,lastval;["saturation","chroma","hue"].forEach((label)=>{label_data=data[label];_data=[];for(i=0;i<data.x.length;i++){val=label_data[i];if(label=="hue"&&Math.abs(val-lastval)>95){_data.push({x:data.x[i],y:null});}else{_data.push({x:data.x[i],y:val});}
lastval=val;}
datasets.push({label:label,showLine:true,data:_data,yAxisID:label=="hue"?"y2":"y",});});new Chart(canvas,{type:"scatter",data:{datasets:datasets},options:{...GLOBAL_OPTIONS,plugins:{legend:{display:true,labels:{boxHeight:1}}},scales:{y:{max:100,min:0,title:{text:"Saturation/Chroma %",display:true}},y2:{max:360,min:0,ticks:{stepSize:36},title:{text:"Hue degree",display:true},position:"right",},},elements:{line:{borderWidth:4},point:{radius:0},},},});}